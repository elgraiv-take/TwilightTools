<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Elgraiv.TwilightTools.Themes.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../TwilightColors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource TwilightBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TwilightBorderBrushKey}" />
        <Setter Property="Foreground" Value="{DynamicResource TwilightForegroundBrushKey}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        TextBlock.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TwilightMouseOrverBorderBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TwilightMouseOrverBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TwilightPressedBorderBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="WindowSystemButton"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="FontFamily" Value="Marlett" />
    </Style>
</ResourceDictionary>